import React, { useEffect, useRef, useState } from "react";
import { useSelector } from "react-redux";
import "./styles.scss";
import Notification from "./notification";
import { B_DARK_THEME, B_LIGHT_THEME } from "../../assets";
import Skeleton, { SkeletonTheme } from "react-loading-skeleton";
import "react-loading-skeleton/dist/skeleton.css";
import Title from "../title";
import Dropdown from "./dropdown/Dropdown";
// import Logout from "./model/logout";
// import Model from "./model";

let useClickOutSide = (handler) => {
  let domNode = useRef();

  useEffect(() => {
    if (!domNode.current) {
      return;
    }
    const handlerEvent = (e) => {
      if (!domNode.current.contains(e.target)) {
        handler();
      }
    };

    document.addEventListener("mousedown", handlerEvent);

    return () => {
      document.removeEventListener("mousedown", handlerEvent);
    };
  }, [handler]);

  return domNode;
};

function Header({ handleClosed, setModelListDetails }) {
  const theme = useSelector((state) => state.theme);

  // const pathName
  const [userProfileDropdown, setUserProfileDropdown] = useState(false);
  // location dropdown
  // const [locationListDropdown, setLocationListDropdown] = useState(false);
  // const [currentLocation, setCurrentLocation] = useState("Goregoan (W) Mumbai");
  // final year dropdown
  // const [finalYearDropdown, setFinalYearDropdown] = useState(false);
  // const [currentFinalYear, setCurrentFinalYear] = useState("FY 2023");
  // user dropdown details
  const [listHover, setListHover] = useState(0);
  // skeleton loading
  const [isLoading, setIsLoading] = useState(true);

  // user role changed
  const [userRoleChanged, setUserRoleChanged] = useState("Super Admin");

  useEffect(() => {
    setTimeout(() => {
      setIsLoading(false);
    }, 1500);
  }, []);

  // mobile view sidebar button
  const handleSidebar = () => {
    const sidebar = document.querySelector(".sidebar");
    const overlay = document.querySelector("#overlay");

    if (sidebar && overlay) {
      sidebar.style.left = 0;
      overlay.style.display = "block";
      document.querySelector("body").style.overflow = "hidden";
    }
  };

  const handleClicks = (text) => {
    setModelListDetails(text);
    setUserProfileDropdown(false);
    document.querySelector("body").classList.add("removeScrollbar");
    document.querySelector("body").style.overflow = "hidden";
    window.scrollTo(0, 0);
  };

  const [userProfileDropdownItems, setUserProfileDropdownItems] =
    useState(false);

  // user logout details
  const userDropdownDetails = [
    {
      id: 1,
      icons: (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="16"
          height="17"
          viewBox="0 0 16 17"
          fill="none"
        >
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M11.7696 12.6412C12.8942 11.617 13.6 10.1409 13.6 8.49998C13.6 5.40718 11.0928 2.89998 7.99998 2.89998C4.90718 2.89998 2.39998 5.40718 2.39998 8.49998C2.39998 10.1409 3.10575 11.617 4.2303 12.6412C4.54253 10.842 6.11147 9.4738 7.99998 9.4738C9.88848 9.4738 11.4574 10.842 11.7696 12.6412ZM11.0249 13.2135C10.9792 11.5822 9.64236 10.2738 7.99998 10.2738C6.35759 10.2738 5.02079 11.5822 4.97502 13.2135C5.84741 13.7745 6.88569 14.1 7.99998 14.1C9.11426 14.1 10.1525 13.7745 11.0249 13.2135ZM7.99998 14.9C11.5346 14.9 14.4 12.0346 14.4 8.49998C14.4 4.96535 11.5346 2.09998 7.99998 2.09998C4.46535 2.09998 1.59998 4.96535 1.59998 8.49998C1.59998 12.0346 4.46535 14.9 7.99998 14.9ZM7.99995 8.19192C8.70736 8.19192 9.28083 7.61845 9.28083 6.91104C9.28083 6.20362 8.70736 5.63015 7.99995 5.63015C7.29254 5.63015 6.71907 6.20362 6.71907 6.91104C6.71907 7.61845 7.29254 8.19192 7.99995 8.19192ZM7.99995 8.99192C9.14919 8.99192 10.0808 8.06028 10.0808 6.91104C10.0808 5.76179 9.14919 4.83015 7.99995 4.83015C6.85071 4.83015 5.91907 5.76179 5.91907 6.91104C5.91907 8.06028 6.85071 8.99192 7.99995 8.99192Z"
            fill="#FF3E5B"
          />
        </svg>
      ),
      text: "Assign Role",
      isFolder: true,
      items: [
        {
          name: "Super Admin",
          key: "1.1",
        },
        {
          name: "Finance Executive",
          key: "1.2",
        },
        {
          name: "Sales Executive",
          key: "1.3",
        },
      ],
    },
    {
      id: 2,
      icons: (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="16"
          height="17"
          viewBox="0 0 16 17"
          fill="none"
        >
          <path
            d="M13.3334 14.5V13.1667C13.3334 12.4594 13.0524 11.7811 12.5523 11.281C12.0522 10.781 11.3739 10.5 10.6667 10.5H5.33335C4.62611 10.5 3.94783 10.781 3.44774 11.281C2.94764 11.7811 2.66669 12.4594 2.66669 13.1667V14.5"
            stroke="#FF3E5B"
            strokeWidth="1.5"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
          <path
            d="M8.00004 7.83333C9.4728 7.83333 10.6667 6.63943 10.6667 5.16667C10.6667 3.69391 9.4728 2.5 8.00004 2.5C6.52728 2.5 5.33337 3.69391 5.33337 5.16667C5.33337 6.63943 6.52728 7.83333 8.00004 7.83333Z"
            stroke="#FF3E5B"
            strokeWidth="1.5"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
        </svg>
      ),
      text: "My Profile",
    },
    {
      id: 3,
      icons: (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="16"
          height="17"
          viewBox="0 0 16 17"
          fill="none"
        >
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M7.99999 7.16672C7.26361 7.16672 6.66666 7.76367 6.66666 8.50005C6.66666 9.23643 7.26361 9.83339 7.99999 9.83339C8.73637 9.83339 9.33333 9.23643 9.33333 8.50005C9.33333 7.76367 8.73637 7.16672 7.99999 7.16672ZM5.77777 8.50005C5.77777 7.27275 6.77269 6.27783 7.99999 6.27783C9.22729 6.27783 10.2222 7.27275 10.2222 8.50005C10.2222 9.72735 9.22729 10.7223 7.99999 10.7223C6.77269 10.7223 5.77777 9.72735 5.77777 8.50005Z"
            fill="#FF3E5B"
          />
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M7.99998 2.68444C7.81188 2.68444 7.63149 2.75916 7.49849 2.89216C7.36548 3.02517 7.29076 3.20556 7.29076 3.39366V3.49011L7.29076 3.49181C7.2897 3.75737 7.21101 4.01683 7.06438 4.23824C6.91775 4.45965 6.70957 4.63336 6.46548 4.73797C6.42518 4.75525 6.38253 4.76615 6.33905 4.77038C6.11317 4.85237 5.86904 4.8733 5.63153 4.83024C5.36381 4.7817 5.11678 4.65407 4.92228 4.46381L4.91892 4.46053L4.8849 4.42647C4.81903 4.36053 4.74065 4.30805 4.65455 4.27236C4.56845 4.23667 4.47616 4.2183 4.38296 4.2183C4.28976 4.2183 4.19747 4.23667 4.11137 4.27236C4.02527 4.30805 3.94705 4.36036 3.88119 4.4263C3.81524 4.49217 3.7626 4.57072 3.72691 4.65682C3.69122 4.74292 3.67285 4.83521 3.67285 4.92841C3.67285 5.02161 3.69122 5.1139 3.72691 5.2C3.7626 5.2861 3.81491 5.36432 3.88085 5.43018L3.91838 5.46771C4.10864 5.66221 4.23624 5.90926 4.28479 6.17698C4.33253 6.44028 4.30162 6.71171 4.19607 6.9574C4.10089 7.20851 3.93353 7.42599 3.71494 7.58233C3.49269 7.74129 3.22777 7.8297 2.95461 7.83609L2.94466 7.83621H2.8936C2.7055 7.83621 2.52511 7.91093 2.3921 8.04394C2.2591 8.17694 2.18438 8.35733 2.18438 8.54543C2.18438 8.73353 2.2591 8.91392 2.3921 9.04693C2.52511 9.17993 2.7055 9.25465 2.8936 9.25465H2.99175C3.25731 9.25571 3.51677 9.3344 3.73818 9.48103C3.95896 9.62724 4.13231 9.83465 4.23701 10.0778C4.34613 10.3262 4.37858 10.6015 4.33018 10.8685C4.28163 11.1362 4.15401 11.3832 3.96375 11.5777L3.96047 11.5811L3.92641 11.6151C3.86047 11.681 3.80799 11.7594 3.7723 11.8455C3.73661 11.9316 3.71824 12.0239 3.71824 12.1171C3.71824 12.2103 3.73661 12.3026 3.7723 12.3887C3.80799 12.4747 3.8603 12.553 3.92624 12.6188C3.99211 12.6848 4.07066 12.7374 4.15676 12.7731C4.24286 12.8088 4.33515 12.8272 4.42835 12.8272C4.52155 12.8272 4.61384 12.8088 4.69994 12.7731C4.78604 12.7374 4.86425 12.6851 4.93012 12.6192L4.96765 12.5816C5.16215 12.3914 5.4092 12.2638 5.67692 12.2152C5.94023 12.1675 6.21166 12.1984 6.45735 12.304C6.70847 12.3991 6.92593 12.5665 7.08227 12.7851C7.24122 13.0073 7.32964 13.2722 7.33603 13.5454L7.33615 13.5554V13.6064C7.33615 13.7945 7.41087 13.9749 7.54388 14.1079C7.67688 14.2409 7.85727 14.3156 8.04537 14.3156C8.23347 14.3156 8.41386 14.2409 8.54686 14.1079C8.67987 13.9749 8.75459 13.7945 8.75459 13.6064V13.51L8.75459 13.5083C8.75565 13.2427 8.83434 12.9833 8.98097 12.7618C9.12716 12.5411 9.33452 12.3678 9.57766 12.2631C9.82606 12.1539 10.1014 12.1214 10.3684 12.1698C10.6361 12.2184 10.8832 12.346 11.0777 12.5363L11.081 12.5396L11.1151 12.5736C11.1809 12.6396 11.2593 12.692 11.3454 12.7277C11.4315 12.7634 11.5238 12.7818 11.617 12.7818C11.7102 12.7818 11.8025 12.7634 11.8886 12.7277C11.9747 12.692 12.0529 12.6397 12.1188 12.5738C12.1847 12.5079 12.2374 12.4294 12.2731 12.3433C12.3087 12.2572 12.3271 12.1649 12.3271 12.0717C12.3271 11.9785 12.3087 11.8862 12.2731 11.8001C12.2374 11.714 12.185 11.6358 12.1191 11.5699L12.0816 11.5324C11.8913 11.3379 11.7637 11.0908 11.7152 10.8231C11.6668 10.5561 11.6992 10.2807 11.8084 10.0323C11.9131 9.78919 12.0864 9.58183 12.3072 9.43564C12.5286 9.28901 12.788 9.21032 13.0536 9.20926L13.0553 9.20926L13.1064 9.20926C13.2945 9.20926 13.4749 9.13454 13.6079 9.00153C13.7409 8.86853 13.8156 8.68814 13.8156 8.50004C13.8156 8.31194 13.7409 8.13155 13.6079 7.99855C13.4749 7.86554 13.2945 7.79082 13.1064 7.79082H13.0099L13.0082 7.79082C12.7427 7.78976 12.4832 7.71107 12.2618 7.56444C12.0404 7.41781 11.8667 7.20963 11.762 6.96554C11.7448 6.92524 11.7339 6.88259 11.7296 6.83911C11.6477 6.61323 11.6267 6.3691 11.6698 6.13159C11.7183 5.86387 11.846 5.61684 12.0362 5.42234L12.0395 5.41899L12.0735 5.38496C12.1395 5.31909 12.192 5.24071 12.2277 5.15461C12.2634 5.06851 12.2817 4.97622 12.2817 4.88302C12.2817 4.78982 12.2634 4.69753 12.2277 4.61143C12.192 4.52533 12.1397 4.44711 12.0737 4.38125C12.0078 4.31531 11.9293 4.26266 11.8432 4.22697C11.7571 4.19128 11.6648 4.17291 11.5716 4.17291C11.4784 4.17291 11.3861 4.19128 11.3 4.22697C11.2139 4.26266 11.1357 4.31497 11.0698 4.38091L11.0323 4.41844C10.8378 4.6087 10.5908 4.73631 10.323 4.78485C10.0561 4.83325 9.78076 4.8008 9.53239 4.69168C9.2892 4.58698 9.08179 4.41363 8.93558 4.19285C8.78895 3.97144 8.71026 3.71198 8.7092 3.44642L8.7092 3.44472V3.39366C8.7092 3.20556 8.63448 3.02517 8.50147 2.89216C8.36847 2.75916 8.18808 2.68444 7.99998 2.68444ZM12.1986 10.2022L12.5879 10.374C12.5467 10.4673 12.5344 10.5709 12.5526 10.6713C12.5707 10.771 12.618 10.8631 12.6886 10.9358L12.7206 10.9678C12.8656 11.1127 12.9807 11.2848 13.0592 11.4742C13.1378 11.6636 13.1782 11.8666 13.1782 12.0717C13.1782 12.2767 13.1378 12.4798 13.0592 12.6692C12.9808 12.8585 12.8657 13.0305 12.7207 13.1754C12.5759 13.3204 12.4038 13.4354 12.2145 13.5139C12.0251 13.5924 11.822 13.6328 11.617 13.6328C11.412 13.6328 11.2089 13.5924 11.0195 13.5139C10.8301 13.4354 10.658 13.3203 10.5131 13.1752L10.4811 13.1432C10.4084 13.0727 10.3163 13.0253 10.2166 13.0073C10.1162 12.9891 10.0127 13.0013 9.91931 13.0425L9.91514 13.0444C9.8236 13.0836 9.74553 13.1487 9.69054 13.2318C9.63568 13.3146 9.60618 13.4116 9.60565 13.511V13.6064C9.60565 14.0202 9.44127 14.4171 9.14866 14.7097C8.85605 15.0023 8.45918 15.1667 8.04537 15.1667C7.63156 15.1667 7.23469 15.0023 6.94208 14.7097C6.64947 14.4171 6.48509 14.0202 6.48509 13.6064V13.5611C6.48189 13.4601 6.44883 13.3624 6.39004 13.2802C6.33043 13.1968 6.24713 13.1334 6.15097 13.098C6.14255 13.0949 6.13424 13.0915 6.12604 13.0879C6.03269 13.0467 5.92915 13.0344 5.82876 13.0526C5.72902 13.0707 5.63693 13.1181 5.56421 13.1887L5.53225 13.2206C5.38734 13.3657 5.21526 13.4808 5.02584 13.5593C4.83643 13.6378 4.63339 13.6782 4.42835 13.6782C4.2233 13.6782 4.02027 13.6378 3.83085 13.5593C3.64144 13.4808 3.46936 13.3657 3.32445 13.2206C3.17954 13.0758 3.06457 12.9038 2.98611 12.7146C2.90759 12.5251 2.86717 12.3221 2.86717 12.1171C2.86717 11.912 2.90759 11.709 2.98611 11.5196C3.0646 11.3302 3.17962 11.1582 3.32462 11.0133L3.35676 10.9812C3.42733 10.9085 3.47468 10.8164 3.49277 10.7167C3.51097 10.6163 3.49868 10.5127 3.45748 10.4194L3.45564 10.4152C3.41641 10.3237 3.3513 10.2456 3.26827 10.1906C3.18543 10.1357 3.08839 10.1062 2.98905 10.1057H2.8936C2.47978 10.1057 2.08292 9.94133 1.79031 9.64872C1.4977 9.35611 1.33331 8.95924 1.33331 8.54543C1.33331 8.13162 1.4977 7.73475 1.79031 7.44214C2.08292 7.14953 2.47978 6.98515 2.8936 6.98515H2.93894C3.03988 6.98195 3.13764 6.94889 3.21983 6.8901C3.30317 6.83049 3.36665 6.74719 3.40202 6.65103C3.40512 6.64261 3.40848 6.6343 3.41209 6.6261C3.45329 6.53275 3.46558 6.42921 3.44738 6.32882C3.42929 6.22908 3.38194 6.13699 3.31136 6.06428L3.27939 6.03231C3.27934 6.03225 3.27945 6.03237 3.27939 6.03231C3.1344 5.88744 3.01921 5.71525 2.94072 5.5259C2.8622 5.33649 2.82178 5.13345 2.82178 4.92841C2.82178 4.72336 2.8622 4.52033 2.94072 4.33091C3.01921 4.14157 3.13423 3.96955 3.27922 3.82468C3.4241 3.67969 3.59612 3.56466 3.78546 3.48617C3.97488 3.40765 4.17791 3.36723 4.38296 3.36723C4.588 3.36723 4.79104 3.40765 4.98045 3.48617C5.1698 3.56466 5.34182 3.67969 5.48669 3.82468C5.48664 3.82462 5.48675 3.82473 5.48669 3.82468L5.51883 3.85681C5.59154 3.92739 5.68363 3.97474 5.78337 3.99283C5.88376 4.01103 5.9873 3.99874 6.08065 3.95755C6.11517 3.94231 6.15149 3.93177 6.18861 3.92614C6.25501 3.88695 6.31193 3.83308 6.35481 3.76833C6.40967 3.68549 6.43916 3.58845 6.4397 3.48911V3.39366C6.4397 2.97984 6.60408 2.58298 6.89669 2.29037C7.1893 1.99776 7.58617 1.83337 7.99998 1.83337C8.41379 1.83337 8.81066 1.99776 9.10327 2.29037C9.39588 2.58298 9.56026 2.97984 9.56026 3.39366V3.44372C9.56079 3.54306 9.59029 3.6401 9.64515 3.72294C9.70014 3.80597 9.7782 3.87111 9.86974 3.91034L9.87393 3.91213C9.96728 3.95333 10.0708 3.96564 10.1712 3.94744C10.2709 3.92935 10.363 3.882 10.4357 3.81144L10.4677 3.77945C10.4677 3.77951 10.4678 3.7794 10.4677 3.77945C10.6126 3.63446 10.7848 3.51927 10.9741 3.44078C11.1635 3.36226 11.3666 3.32184 11.5716 3.32184C11.7767 3.32184 11.9797 3.36226 12.1691 3.44078C12.3584 3.51924 12.5303 3.63421 12.6752 3.77912C12.8202 3.92403 12.9353 4.09611 13.0139 4.28552C13.0924 4.47494 13.1328 4.67797 13.1328 4.88302C13.1328 5.08807 13.0924 5.2911 13.0139 5.48052C12.9354 5.66986 12.8203 5.84188 12.6753 5.98675C12.6753 5.98681 12.6754 5.9867 12.6753 5.98675L12.6432 6.0189C12.5726 6.09162 12.5253 6.18369 12.5072 6.28343C12.489 6.38382 12.5013 6.48737 12.5425 6.58071C12.5577 6.61523 12.5683 6.65155 12.5739 6.68867C12.6131 6.75507 12.6669 6.81199 12.7317 6.85487C12.8145 6.90973 12.9116 6.93923 13.0109 6.93976H13.1064C13.5202 6.93976 13.917 7.10414 14.2097 7.39675C14.5023 7.68936 14.6666 8.08623 14.6666 8.50004C14.6666 8.91385 14.5023 9.31072 14.2097 9.60333C13.917 9.89594 13.5202 10.0603 13.1064 10.0603H13.0563C12.957 10.0609 12.8599 10.0904 12.7771 10.1452C12.6941 10.2002 12.6289 10.2783 12.5897 10.3698L12.1986 10.2022Z"
            fill="#FF3E5B"
          />
        </svg>
      ),
      text: "Account Setting",
    },
    {
      id: 4,
      icons: (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="16"
          height="17"
          viewBox="0 0 16 17"
          fill="none"
        >
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M3.81818 8.49996C3.48346 8.49996 3.21212 8.77131 3.21212 9.10602V13.3484C3.21212 13.6832 3.48346 13.9545 3.81818 13.9545H12.303C12.6377 13.9545 12.9091 13.6832 12.9091 13.3484V9.10602C12.9091 8.77131 12.6377 8.49996 12.303 8.49996H3.81818ZM2 9.10602C2 8.10187 2.81403 7.28784 3.81818 7.28784H12.303C13.3072 7.28784 14.1212 8.10187 14.1212 9.10602V13.3484C14.1212 14.3526 13.3072 15.1666 12.303 15.1666H3.81818C2.81403 15.1666 2 14.3526 2 13.3484V9.10602Z"
            fill="#FF3E5B"
          />
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M8.06062 3.0455C7.41767 3.0455 6.80105 3.30091 6.34642 3.75554C5.89179 4.21017 5.63638 4.82679 5.63638 5.46974V7.89398C5.63638 8.2287 5.36503 8.50004 5.03032 8.50004C4.6956 8.50004 4.42426 8.2287 4.42426 7.89398V5.46974C4.42426 4.50531 4.80737 3.58039 5.48932 2.89844C6.17127 2.21649 7.0962 1.83337 8.06062 1.83337C9.02504 1.83337 9.94997 2.21649 10.6319 2.89844C11.3139 3.58039 11.697 4.50531 11.697 5.46974V7.89398C11.697 8.2287 11.4256 8.50004 11.0909 8.50004C10.7562 8.50004 10.4849 8.2287 10.4849 7.89398V5.46974C10.4849 4.82679 10.2295 4.21017 9.77482 3.75554C9.32018 3.30091 8.70357 3.0455 8.06062 3.0455Z"
            fill="#FF3E5B"
          />
        </svg>
      ),
      text: "Change Password",
    },
    {
      id: 5,
      icons: (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="16"
          height="17"
          viewBox="0 0 16 17"
          fill="none"
        >
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M1.59998 3.09998C1.59998 2.54769 2.04769 2.09998 2.59998 2.09998H10.4C10.9523 2.09998 11.4 2.54769 11.4 3.09998V4.58693C11.4 4.80785 11.2209 4.98693 11 4.98693C10.7791 4.98693 10.6 4.80785 10.6 4.58693V3.09998C10.6 2.98952 10.5104 2.89998 10.4 2.89998H2.59998C2.48952 2.89998 2.39998 2.98952 2.39998 3.09998V13.9C2.39998 14.0104 2.48952 14.1 2.59998 14.1H10.4C10.5104 14.1 10.6 14.0104 10.6 13.9V12.413C10.6 12.1921 10.7791 12.013 11 12.013C11.2209 12.013 11.4 12.1921 11.4 12.413V13.9C11.4 14.4523 10.9523 14.9 10.4 14.9H2.59998C2.04769 14.9 1.59998 14.4523 1.59998 13.9V3.09998ZM11.5036 6.44582C11.644 6.27523 11.896 6.25073 12.0666 6.3911L14.2541 8.1911C14.3465 8.26708 14.4 8.38039 14.4 8.49998C14.4 8.61956 14.3465 8.73287 14.2541 8.80885L12.0666 10.6088C11.896 10.7492 11.644 10.7247 11.5036 10.5541C11.3632 10.3835 11.3877 10.1315 11.5583 9.9911L12.8843 8.89998H7.99998C7.77906 8.89998 7.59998 8.72089 7.59998 8.49998C7.59998 8.27906 7.77906 8.09998 7.99998 8.09998H12.8843L11.5583 7.00885C11.3877 6.86848 11.3632 6.6164 11.5036 6.44582Z"
            fill="#FF3E5B"
          />
        </svg>
      ),
      text: "Logout",
    },
  ];

  // user dropdown role text word slice
  const wordSlice = (word) => {
    if (word.length > 11) {
      return word.slice(0, 11) + "...";
    } else {
      return word;
    }
  };

  // location list
  const locationList = [
    {
      id: 1,
      name: "Kandivali (E) Mumbai",
    },
    {
      id: 2,
      name: "Goregoan (W) Mumbai",
    },
    {
      id: 3,
      name: "Andheri (W) Mumbai",
    },
    {
      id: 4,
      name: "Kurla (W) Mumbai",
    },
    {
      id: 5,
      name: "Vikhroli (W) Mumbai",
    },
  ];

  // final year lisy
  const finalYearList = [
    {
      id: 1,
      name: "FY 2023",
    },
    {
      id: 2,
      name: "FY 2022",
    },
    {
      id: 3,
      name: "FY 2021",
    },
    {
      id: 4,
      name: "FY 2020",
    },
  ];

  let domNode = useClickOutSide(() => {
    setUserProfileDropdown(false);
  });

  // location dropdown
  // const handleClicksLocationListDropdown = (e) => {
  //   setLocationListDropdown(!locationListDropdown);
  // };

  // let domNode_2 = useClickOutSide(() => {
  //   setLocationListDropdown(false);
  // });

  // final year dropdown
  // const handleClicksFinalYearListDropdown = (e) => {
  //   setFinalYearDropdown(!finalYearDropdown);
  // };

  // let domNode_3 = useClickOutSide(() => {
  //   setFinalYearDropdown(false);
  // });

  return (
    <div
      style={{
        background: theme === "light" ? "white" : "#1C1C1C",
        color: theme === "light" ? "black" : "white",
        position: "sticky",
        top: 0,
        zIndex: 10,
      }}
    >
      <div className="header">
        <div className="headerLeft">
          {/* mobile view button */}
          <div className="mobileViewBtn" onClick={handleSidebar}>
            {isLoading ? (
              <SkeletonTheme
                baseColor={`${theme === "dark" ? "#444" : "#f5f5f5"}`}
                highlightColor={`${theme === "dark" ? "#50535a" : "#ebebeb"}`}
              >
                <Skeleton width={35} height={35} />
              </SkeletonTheme>
            ) : (
              <>
                <img
                  src={theme === "light" ? B_LIGHT_THEME : B_DARK_THEME}
                  alt="robin-b-logo"
                  title="Sidebar-collapsed"
                />
                <span>
                  <svg
                    style={{ transform: "rotate(180deg)" }}
                    stroke="#FF3E5B"
                    fill="#FF3E5B"
                    strokeWidth="0"
                    viewBox="0 0 16 16"
                    height="16"
                    width="16"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      fillRule="evenodd"
                      d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z"
                    ></path>
                  </svg>
                </span>
              </>
            )}
          </div>
          {/* dropdown list */}
          <div className="userText">
            {isLoading ? (
              <SkeletonTheme
                baseColor={`${theme === "dark" ? "#444" : "#f5f5f5"}`}
                highlightColor={`${theme === "dark" ? "#50535a" : "#ebebeb"}`}
              >
                <Skeleton width={175} height={18} style={{ marginBottom: 4 }} />
                <Skeleton width={145} height={12} />
              </SkeletonTheme>
            ) : (
              <>
                <p
                  className="dealerName"
                  style={{ color: theme === "light" ? "#000" : "#fff" }}
                >
                  {/* {dealerName} */}
                  Koncept Automobile Pvt Ltd
                </p>
                <div className="dropdownLocationFinalYear">
                  {/* location dropdown */}
                  {/* <div
                    ref={domNode_2}
                    style={{
                      display: "flex",
                      alignItems: "center",
                      color: "#FF3E5B",
                      cursor: "pointer",
                      borderRight: `1px solid ${
                        theme === "light" ? "#B5B5B6" : "#545454"
                      }`,
                      paddingRight: 6,
                      position: "relative",
                    }}
                    className="dropdown-container"
                    onClick={(e) => handleClicksLocationListDropdown(e)}
                  >
                    Goregoan (W) Mumbai
                    <span style={{ minWidth: 125 }}>{currentLocation}</span>
                    <span
                      style={{
                        display: "flex",
                        alignItems: "center",
                        justifyContent: "center",
                      }}
                    >
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        style={{
                          transform: locationListDropdown && "rotate(180deg)",
                          // transition: "transform 0.3s ease-in-out",
                        }}
                        width="12"
                        height="12"
                        viewBox="0 0 12 12"
                        fill="none"
                      >
                        <path
                          fillRule="evenodd"
                          clipRule="evenodd"
                          d="M10.7052 3.38119C10.8261 3.49451 10.8322 3.68436 10.7189 3.80523L6.21886 8.60523C6.16215 8.66573 6.08292 8.70005 6 8.70005C5.91708 8.70005 5.83786 8.66573 5.78114 8.60523L1.28114 3.80523C1.16782 3.68436 1.17395 3.49451 1.29482 3.38119C1.41569 3.26787 1.60554 3.27399 1.71886 3.39487L6 7.96142L10.2811 3.39487C10.3945 3.27399 10.5843 3.26787 10.7052 3.38119Z"
                          fill="#FF3E5B"
                        />
                      </svg>
                    </span>

                    location dropdown
                    {locationListDropdown && (
                      <div
                        className="locationDropdownList"
                        style={{
                          borderColor:
                            theme === "light" ? "#0B0B0C" : "#ffffff",
                          backgroundColor:
                            theme === "light" ? "#ffffff" : "#1C1C1C",
                          boxShadow:
                            theme === "light"
                              ? "rgb(0 0 0 / 20%) 0px 0px 3px"
                              : "rgb(255 255 255 / 15%) 1px 0px 1px 0px",
                        }}
                      >
                        {locationList.map((ele) => (
                          <div
                            title={ele.text}
                            key={ele.id}
                            className={`lists ${
                              theme === "light" ? "lightTheme" : "darkTheme"
                            }`}
                            onClick={() => {
                              setCurrentLocation(ele.name);
                              setLocationListDropdown(false);
                            }}
                            style={{
                              backgroundColor:
                                currentLocation === ele.name
                                  ? theme === "light"
                                    ? "#F2F2F2"
                                    : "#232324"
                                  : "",
                            }}
                          >
                            location name
                            <p
                              style={{
                                color:
                                  currentLocation === ele.name
                                    ? "#ff3e5b"
                                    : theme === "light"
                                    ? "black"
                                    : "white",
                              }}
                            >
                              {ele.name}
                            </p>
                          </div>
                        ))}
                      </div>
                    )}
                  </div> */}

                  <Dropdown
                    items={locationList}
                    minWidth={122}
                    dropdownMenWidth={177}
                    defaultSelected="Goregoan (W) Mumbai"
                  />
                  {/* divider */}
                  <div
                    style={{
                      width: 1,
                      height: "10px",
                      display: "block",
                      backgroundColor:
                        theme === "light" ? "#b5b5b6" : "#545454",
                      margin: "0 6px",
                    }}
                  />
                  {/*  final year dropdown */}
                  <Dropdown
                    items={finalYearList}
                    // minWidth={122}
                    dropdownMenWidth={138}
                  />
                  {/* final year dropdown */}
                  {/* <div
                    ref={domNode_3}
                    style={{
                      display: "flex",
                      alignItems: "center",
                      color: "#FF3E5B",
                      cursor: "pointer",
                      paddingLeft: 6,
                      position: "relative",
                    }}
                    onClick={(e) => handleClicksFinalYearListDropdown(e)}
                    className="finalYearDropdownContainer dropdown-container"
                  >
                    <span style={{ minWidth: 48 }}>{currentFinalYear}</span>
                    <span
                      style={{
                        display: "flex",
                        alignItems: "center",
                        justifyContent: "center",
                      }}
                    >
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        style={{
                          transform: finalYearDropdown && "rotate(180deg)",
                          // transition: "transform 0.3s ease-in-out",
                        }}
                        width="12"
                        height="12"
                        viewBox="0 0 12 12"
                        fill="none"
                      >
                        <path
                          fillRule="evenodd"
                          clipRule="evenodd"
                          d="M10.7052 3.38119C10.8261 3.49451 10.8322 3.68436 10.7189 3.80523L6.21886 8.60523C6.16215 8.66573 6.08292 8.70005 6 8.70005C5.91708 8.70005 5.83786 8.66573 5.78114 8.60523L1.28114 3.80523C1.16782 3.68436 1.17395 3.49451 1.29482 3.38119C1.41569 3.26787 1.60554 3.27399 1.71886 3.39487L6 7.96142L10.2811 3.39487C10.3945 3.27399 10.5843 3.26787 10.7052 3.38119Z"
                          fill="#FF3E5B"
                        />
                      </svg>
                    </span>

                    final year dropdown
                    {finalYearDropdown && (
                      <div
                        className={`finalYearDropdown`}
                        style={{
                          borderColor:
                            theme === "light" ? "#0B0B0C" : "#ffffff",
                          backgroundColor:
                            theme === "light" ? "#ffffff" : "#1C1C1C",
                          boxShadow:
                            theme === "light"
                              ? "rgb(0 0 0 / 20%) 0px 0px 3px"
                              : "rgb(255 255 255 / 15%) 1px 0px 1px 0px",
                        }}
                      >
                        {finalYearList.map((ele) => (
                          <div
                            title={ele.text}
                            key={ele.id}
                            className={`lists ${
                              theme === "light" ? "lightTheme" : "darkTheme"
                            }`}
                            onClick={() => {
                              setCurrentFinalYear(ele.name);
                              setFinalYearDropdown(false);
                            }}
                          >
                            final year name
                            <p
                              style={{
                                width: "100%",
                                color:
                                  currentFinalYear === ele.name
                                    ? "#ff3e5b"
                                    : theme === "light"
                                    ? "black"
                                    : "white",
                                backgroundColor:
                                  currentFinalYear === ele.name
                                    ? theme === "light"
                                      ? "#F2F2F2"
                                      : "#232324"
                                    : "",
                              }}
                            >
                              {ele.name}
                            </p>
                          </div>
                        ))}
                      </div>
                    )}
                  </div> */}
                </div>
              </>
            )}
          </div>
        </div>
        {/* header right */}
        <div className="headerRight">
          {/* notifications */}
          {isLoading ? (
            <SkeletonTheme
              baseColor={`${theme === "dark" ? "#444" : "#f5f5f5"}`}
              highlightColor={`${theme === "dark" ? "#50535a" : "#ebebeb"}`}
            >
              <Skeleton width={30} height={35} />
            </SkeletonTheme>
          ) : (
            <Notification />
          )}
          {/* help desk */}
          <div
            title="OneStop Help Desk"
            className="helpDesk"
            style={{ color: theme === "light" ? "black" : "white" }}
          >
            {/* icons */}
            <span>
              {isLoading ? (
                <SkeletonTheme
                  baseColor={`${theme === "dark" ? "#444" : "#f5f5f5"}`}
                  highlightColor={`${theme === "dark" ? "#50535a" : "#ebebeb"}`}
                >
                  <Skeleton width={30} height={35} />
                </SkeletonTheme>
              ) : (
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="23"
                  height="25"
                  viewBox="0 0 23 25"
                  fill="none"
                >
                  <path
                    fillRule="evenodd"
                    clipRule="evenodd"
                    d="M6.56401 2.21532C7.99298 1.01142 9.8631 0.5 11.3493 0.5C12.8345 0.5 14.7211 1.01082 16.1674 2.2119C17.557 3.36589 18.5031 5.13098 18.318 7.55121C18.6539 7.75928 18.9557 8.0622 19.1408 8.49444C19.4293 9.16845 19.457 10.0871 19.3272 10.8766C19.2602 11.2843 19.1453 11.6962 18.9746 12.0633C18.8305 12.373 18.6299 12.6867 18.3525 12.9293C18.3683 13.2785 18.3382 13.7328 18.1886 14.1869C17.9733 14.8404 17.491 15.5307 16.5471 15.8185C16.1741 15.9323 15.7171 15.9093 15.3151 15.8574C15.1417 15.835 14.9592 15.8043 14.7712 15.767C14.8211 15.8638 14.8791 15.9653 14.9559 16.0824C15.1637 16.3987 15.4859 16.7634 16.0807 17.1385C16.3129 17.2849 16.6246 17.3873 17.0673 17.4949C17.174 17.5208 17.2905 17.5475 17.4139 17.5757C17.7613 17.6551 18.1628 17.7468 18.5492 17.8697C19.6713 18.2264 20.85 18.8921 21.6812 20.5265C22.3143 21.7712 22.4136 22.7611 22.0766 23.4985C21.7617 24.1874 21.1048 24.5282 20.5769 24.4982H2.20525C1.67742 24.5282 1.02043 24.1874 0.705559 23.4985C0.368573 22.7611 0.46788 21.7712 1.10093 20.5265C1.9322 18.8921 3.11086 18.2264 4.23292 17.8697C4.61935 17.7468 5.02086 17.6551 5.36828 17.5757C5.49165 17.5475 5.60821 17.5208 5.71484 17.4949C6.15757 17.3873 6.46927 17.2849 6.70142 17.1385C7.29625 16.7634 7.61849 16.3987 7.82623 16.0824C7.96005 15.8786 8.03656 15.722 8.11316 15.5551C7.88026 15.3432 7.66273 15.1081 7.46138 14.8523C7.10963 14.4053 6.80759 13.8964 6.55541 13.3372C6.38673 13.3789 6.20997 13.4078 6.03713 13.4221C5.58022 13.4598 4.9596 13.4118 4.44387 13.0415C4.09172 12.7887 3.84788 12.4233 3.68046 12.0633C3.50975 11.6962 3.39489 11.2843 3.32785 10.8766C3.19803 10.0871 3.22577 9.16845 3.51429 8.49444C3.71846 8.01749 4.07119 7.70119 4.45 7.49532C4.28164 5.10904 5.20206 3.36275 6.56401 2.21532ZM5.67841 8.64953C5.5703 8.66801 5.46671 8.69304 5.37112 8.72525C5.08269 8.82242 4.94968 8.95294 4.89326 9.08473C4.75853 9.39948 4.70383 9.99981 4.80798 10.6332C4.85793 10.937 4.93916 11.2126 5.04059 11.4308C5.1453 11.6559 5.24965 11.7735 5.31869 11.823C5.42392 11.8986 5.62774 11.9508 5.91363 11.9271C5.95951 11.9234 6.00444 11.9178 6.0477 11.9109C5.8908 11.3366 5.77516 10.7285 5.70091 10.0951C5.6422 9.5944 5.63678 9.11143 5.67841 8.64953ZM6.01072 7.11173C5.98483 7.11268 5.95877 7.11385 5.93256 7.11524C5.8827 5.36173 6.58126 4.16217 7.53047 3.36246C8.64652 2.4222 10.157 2 11.3493 2C12.5424 2 14.0735 2.42281 15.2091 3.36588C16.1753 4.16828 16.8862 5.36842 16.839 7.11897C16.8341 7.11863 16.8291 7.11831 16.8242 7.11799C16.5623 6.30356 16.143 5.59697 15.6065 5.01403C14.5044 3.81661 12.9492 3.18647 11.3871 3.18647C9.06635 3.18647 6.8544 4.71883 6.01072 7.11173ZM17.115 8.66845C17.1451 9.12206 17.1327 9.5988 17.0731 10.0969C16.9957 10.7438 16.8828 11.3553 16.7336 11.9265C16.7362 11.9267 16.7388 11.9269 16.7414 11.9271C17.0273 11.9508 17.2311 11.8986 17.3364 11.823C17.4054 11.7735 17.5097 11.6559 17.6145 11.4308C17.7159 11.2126 17.7971 10.937 17.8471 10.6332C17.9512 9.99981 17.8965 9.39948 17.7618 9.08473C17.6998 8.93996 17.5684 8.81432 17.3057 8.72245C17.2455 8.70141 17.1817 8.68346 17.115 8.66845ZM16.2412 13.3688C16.082 13.7343 15.9026 14.0756 15.7025 14.3906C15.9436 14.4102 16.0709 14.3955 16.1096 14.3837C16.4764 14.2719 16.661 14.03 16.7639 13.7176C16.7949 13.6235 16.8166 13.5269 16.8311 13.4324C16.757 13.4314 16.6857 13.4277 16.6179 13.4221C16.4929 13.4117 16.3658 13.3937 16.2412 13.3688ZM14.0958 14.0571C13.2535 13.8153 12.3713 13.4847 11.7342 13.1811C11.3603 13.0029 10.9127 13.1616 10.7345 13.5356C10.5564 13.9095 10.7151 14.3571 11.089 14.5353C11.5178 14.7396 12.0323 14.9496 12.5715 15.1414C12.2084 15.266 11.8139 15.3291 11.3871 15.3291C10.2802 15.3291 9.35763 14.8364 8.64015 13.9246C7.90851 12.9949 7.39016 11.6217 7.1907 9.92045C6.82203 6.77588 9.11059 4.68647 11.3871 4.68647C12.554 4.68647 13.7007 5.15838 14.5027 6.02982C15.2939 6.88943 15.7912 8.18372 15.5837 9.9187C15.3621 11.7708 14.8411 13.1357 14.1244 14.0221C14.1149 14.0338 14.1054 14.0455 14.0958 14.0571ZM13.4221 16.4184C12.806 16.6888 12.1245 16.8291 11.3871 16.8291C10.6546 16.8291 9.98012 16.6763 9.37167 16.3956C9.28663 16.5626 9.18845 16.7407 9.08008 16.9057C8.88079 17.2092 8.62462 17.5206 8.27763 17.8289C8.89407 18.2122 9.78802 18.5438 10.8219 18.642C12.0125 18.755 13.3139 18.5495 14.4866 17.8128C14.1487 17.5098 13.8979 17.2039 13.7021 16.9057C13.5986 16.7481 13.5045 16.5787 13.4221 16.4184ZM15.8474 18.6902C14.2155 19.9506 12.3315 20.292 10.6801 20.1352C9.18878 19.9937 7.8039 19.4365 6.91996 18.696C6.63316 18.808 6.34121 18.8863 6.06909 18.9525C5.92209 18.9882 5.78124 19.0204 5.6439 19.0518C5.31706 19.1264 5.01009 19.1966 4.68735 19.2992C3.84541 19.5668 3.04361 20.0157 2.43794 21.2065C1.89872 22.2667 2.00708 22.7377 2.06982 22.8749C2.11489 22.9736 2.16963 22.9942 2.17466 22.9982H20.6075C20.6125 22.9942 20.6673 22.9736 20.7123 22.8749C20.7751 22.7377 20.8835 22.2667 20.3442 21.2065C19.7386 20.0157 18.9368 19.5668 18.0948 19.2992C17.7721 19.1966 17.4651 19.1264 17.1383 19.0518C17.0009 19.0204 16.8601 18.9882 16.7131 18.9525C16.4363 18.8852 16.139 18.8053 15.8474 18.6902Z"
                    fill="currentColor"
                  ></path>
                </svg>
              )}
              {/* <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="24"
                  height="24"
                  viewBox="0 0 24 24"
                  fill="none"
                >
                  <path
                    fillRule="evenodd"
                    clipRule="evenodd"
                    d="M8.13839 3.77215C9.28156 2.80904 10.7777 2.3999 11.9666 2.3999C13.1548 2.3999 14.664 2.80856 15.8211 3.76943C16.9328 4.69261 17.6897 6.10468 17.5416 8.04087C17.8103 8.20733 18.0518 8.44966 18.1998 8.79546C18.4306 9.33466 18.4528 10.0696 18.3489 10.7012C18.2953 11.0273 18.2034 11.3568 18.0669 11.6505C17.9516 11.8983 17.7911 12.1493 17.5692 12.3434C17.5818 12.6227 17.5577 12.9862 17.4381 13.3494C17.2658 13.8722 16.88 14.4244 16.1249 14.6547C15.8264 14.7457 15.4608 14.7274 15.1393 14.6858C15.0005 14.6679 14.8546 14.6434 14.7041 14.6135C14.7441 14.6909 14.7904 14.7721 14.8519 14.8658C15.0181 15.1189 15.2759 15.4106 15.7518 15.7107C15.9375 15.8278 16.1869 15.9098 16.541 15.9958C16.6264 16.0166 16.7196 16.0379 16.8183 16.0604C17.0962 16.124 17.4174 16.1974 17.7266 16.2956C18.6242 16.581 19.5672 17.1136 20.2322 18.4211C20.7386 19.4169 20.8181 20.2088 20.5485 20.7987C20.2966 21.3498 19.771 21.6224 19.3487 21.5985H4.65139C4.22912 21.6224 3.70353 21.3498 3.45163 20.7987C3.18204 20.2088 3.26149 19.4169 3.76792 18.4211C4.43295 17.1136 5.37587 16.581 6.27352 16.2956C6.58266 16.1974 6.90387 16.124 7.18181 16.0604C7.28051 16.0379 7.37375 16.0166 7.45906 15.9958C7.81324 15.9098 8.0626 15.8278 8.24832 15.7107C8.72419 15.4106 8.98198 15.1189 9.14817 14.8658C9.25522 14.7028 9.31643 14.5775 9.37771 14.444C9.19139 14.2745 9.01737 14.0864 8.85629 13.8817C8.57489 13.5241 8.33325 13.117 8.13151 12.6697C7.99657 12.703 7.85516 12.7261 7.71688 12.7375C7.35136 12.7677 6.85486 12.7293 6.44228 12.4331C6.16056 12.2308 5.96549 11.9385 5.83155 11.6505C5.69498 11.3568 5.60309 11.0273 5.54947 10.7012C5.44561 10.0696 5.4678 9.33466 5.69862 8.79546C5.86195 8.4139 6.14413 8.16085 6.44718 7.99616C6.3125 6.08713 7.04883 4.6901 8.13839 3.77215ZM7.42991 8.91952C7.34342 8.93431 7.26055 8.95434 7.18408 8.9801C6.95333 9.05784 6.84692 9.16226 6.80179 9.26769C6.694 9.51949 6.65024 9.99975 6.73357 10.5065C6.77353 10.7495 6.83851 10.97 6.91965 11.1445C7.00342 11.3247 7.08691 11.4187 7.14213 11.4583C7.22632 11.5188 7.38937 11.5605 7.61809 11.5416C7.65479 11.5386 7.69073 11.5341 7.72535 11.5286C7.59982 11.0692 7.50731 10.5827 7.44791 10.076C7.40094 9.67542 7.39661 9.28904 7.42991 8.91952ZM7.69576 7.68929C7.67504 7.69005 7.6542 7.69098 7.63323 7.69209C7.59334 6.28929 8.15219 5.32964 8.91156 4.68987C9.8044 3.93766 11.0128 3.5999 11.9666 3.5999C12.9211 3.5999 14.1459 3.93815 15.0544 4.6926C15.8274 5.33452 16.3961 6.29464 16.3584 7.69508C16.3544 7.69481 16.3505 7.69455 16.3465 7.6943C16.137 7.04275 15.8015 6.47748 15.3723 6.01113C14.4907 5.05319 13.2465 4.54908 11.9969 4.54908C10.1403 4.54908 8.3707 5.77497 7.69576 7.68929ZM16.5792 8.93466C16.6033 9.29755 16.5933 9.67894 16.5456 10.0774C16.4837 10.595 16.3934 11.0841 16.2741 11.5411C16.2762 11.5413 16.2782 11.5415 16.2803 11.5416C16.509 11.5605 16.6721 11.5188 16.7563 11.4583C16.8115 11.4187 16.895 11.3247 16.9788 11.1445C17.0599 10.97 17.1249 10.7495 17.1648 10.5065C17.2482 9.99975 17.2044 9.51949 17.0966 9.26769C17.047 9.15187 16.9419 9.05136 16.7318 8.97786C16.6836 8.96103 16.6325 8.94667 16.5792 8.93466ZM15.8801 12.6949C15.7528 12.9874 15.6093 13.2604 15.4492 13.5124C15.6421 13.5281 15.7439 13.5163 15.7749 13.5069C16.0683 13.4174 16.216 13.2239 16.2983 12.974C16.3231 12.8987 16.3404 12.8214 16.3521 12.7458C16.2928 12.745 16.2357 12.742 16.1815 12.7375C16.0815 12.7293 15.9798 12.7149 15.8801 12.6949ZM14.1638 13.2456C13.49 13.0522 12.7842 12.7876 12.2746 12.5448C11.9754 12.4023 11.6174 12.5292 11.4748 12.8284C11.3323 13.1275 11.4592 13.4856 11.7584 13.6281C12.1014 13.7916 12.513 13.9596 12.9444 14.1131C12.6539 14.2127 12.3383 14.2632 11.9969 14.2632C11.1114 14.2632 10.3733 13.869 9.7993 13.1396C9.21399 12.3958 8.79931 11.2973 8.63974 9.93626C8.34481 7.42061 10.1757 5.74908 11.9969 5.74908C12.9304 5.74908 13.8478 6.12661 14.4894 6.82376C15.1223 7.51145 15.5202 8.54688 15.3541 9.93486C15.1769 11.4166 14.76 12.5085 14.1867 13.2176C14.1791 13.227 14.1715 13.2363 14.1638 13.2456ZM13.6249 15.1346C13.132 15.3509 12.5868 15.4632 11.9969 15.4632C11.4109 15.4632 10.8713 15.3409 10.3845 15.1164C10.3165 15.2499 10.2379 15.3924 10.1512 15.5245C9.99181 15.7673 9.78688 16.0164 9.50928 16.263C10.0024 16.5696 10.7176 16.835 11.5447 16.9135C12.4972 17.0039 13.5383 16.8395 14.4764 16.2502C14.2061 16.0078 14.0055 15.763 13.8489 15.5245C13.7661 15.3984 13.6908 15.2628 13.6249 15.1346ZM15.5651 16.9521C14.2596 17.9604 12.7524 18.2335 11.4313 18.1081C10.2382 17.9949 9.1303 17.5491 8.42315 16.9567C8.19371 17.0463 7.96015 17.109 7.74246 17.1619C7.62485 17.1905 7.51217 17.2162 7.4023 17.2413C7.14083 17.3011 6.89526 17.3572 6.63707 17.4392C5.96351 17.6534 5.32207 18.0124 4.83753 18.9651C4.40615 19.8133 4.49285 20.19 4.54304 20.2999C4.57909 20.3787 4.62289 20.3953 4.62691 20.3985H19.3732C19.3772 20.3953 19.421 20.3787 19.4571 20.2999C19.5073 20.19 19.5939 19.8133 19.1626 18.9651C18.678 18.0124 18.0366 17.6534 17.363 17.4392C17.1048 17.3572 16.8593 17.3011 16.5978 17.2413C16.4879 17.2162 16.3752 17.1905 16.2576 17.1619C16.0362 17.1081 15.7984 17.0441 15.5651 16.9521Z"
                    fill="currentColor"
                  />
                </svg> */}
            </span>
            {/* text */}
            {/* <div className="helpDeskText">
              {isLoading ? (
                <SkeletonTheme
                  baseColor={`${theme === "dark" ? "#444" : "#f5f5f5"}`}
                  highlightColor={`${theme === "dark" ? "#50535a" : "#ebebeb"}`}
                >
                  <Skeleton width={50} height={10} />
                  <Skeleton width={50} height={10} />
                </SkeletonTheme>
              ) : (
                <>
                  <span>OneStop</span>
                  <span>Help Desk</span>
                </>
              )}
            </div> */}
          </div>
          {/* user profiles */}
          <div
            ref={domNode}
            title="User Profile"
            className="userProfileContainer"
          >
            {isLoading ? (
              <div style={{ display: "flex", alignItems: "center", gap: 6 }}>
                <SkeletonTheme
                  baseColor={`${theme === "dark" ? "#444" : "#f5f5f5"}`}
                  highlightColor={`${theme === "dark" ? "#50535a" : "#ebebeb"}`}
                >
                  <Skeleton
                    width={32}
                    height={32}
                    style={{ borderRadius: "50%" }}
                  />
                </SkeletonTheme>
                <div
                  style={{
                    display: "flex",
                    alignItems: "center",
                    flexDirection: "column",
                  }}
                >
                  <SkeletonTheme
                    baseColor={`${theme === "dark" ? "#444" : "#f5f5f5"}`}
                    highlightColor={`${
                      theme === "dark" ? "#50535a" : "#ebebeb"
                    }`}
                  >
                    <Skeleton width={130} height={14} />
                    <Skeleton width={130} height={14} />
                  </SkeletonTheme>
                </div>
              </div>
            ) : (
              <div
                onClick={() => setUserProfileDropdown(!userProfileDropdown)}
                className="userProfile"
                style={{ cursor: "pointer" }}
              >
                {/* icons */}
                <span
                  className="userAvatar"
                  style={{
                    backgroundColor: theme === "light" ? "#E6E6E6" : "#545454",
                    color: theme === "light" ? "#0B0B0C" : "#ffffff",
                    borderColor: theme === "light" ? "#B5B5B6" : "#545454",
                  }}
                >
                  JD
                </span>
                {/* user details */}
                <div className="userDetails">
                  {/* user name */}
                  <span className="username">Joana Doe</span>
                  <p style={{ marginTop: 2 }}>
                    <span className="userNumber" style={{ color: "#FF3E5B" }}>
                      {/* {wordSlice(userRoleChanged)} */}
                      {userRoleChanged}
                    </span>
                  </p>
                </div>

                {/* icons */}
                {/* arrow icons */}
                <span
                  style={{
                    display: "flex",
                    alignItems: "center",
                    justifyContent: "center",
                    marginLeft: 10,
                  }}
                >
                  <svg
                    style={{
                      transform: userProfileDropdown
                        ? "rotate(360deg)"
                        : "rotate(180deg)",
                      // transition: "transform 0.3s ease-in-out",
                    }}
                    xmlns="http://www.w3.org/2000/svg"
                    width="16"
                    height="16"
                    viewBox="0 0 16 16"
                    fill="none"
                  >
                    <path
                      fillRule="evenodd"
                      clipRule="evenodd"
                      d="M14.2736 11.4919C14.4348 11.3408 14.4429 11.0877 14.2918 10.9265L8.29184 4.52652C8.21622 4.44586 8.11059 4.4001 8.00002 4.4001C7.88946 4.4001 7.78383 4.44586 7.70821 4.52652L1.70821 10.9265C1.55712 11.0877 1.56528 11.3408 1.72645 11.4919C1.88761 11.643 2.14075 11.6348 2.29184 11.4737L8.00002 5.38494L13.7082 11.4737C13.8593 11.6348 14.1124 11.643 14.2736 11.4919Z"
                      fill="#FF3E5B"
                    />
                  </svg>
                </span>
              </div>
            )}
            {/* dropdown */}
            {userProfileDropdown && (
              <div
                className="dropdownUserDetails"
                style={{
                  backgroundColor: theme === "light" ? "#ffffff" : "#1C1C1C",
                  boxShadow:
                    theme === "light"
                      ? "rgb(0 0 0 / 20%) 0px 0px 3px"
                      : "rgb(255 255 255 / 15%) 1px 0px 1px 0px",
                }}
              >
                {userDropdownDetails.map((ele) => (
                  <div title={ele.text} key={ele.id} className="lists">
                    {ele.isFolder ? (
                      <div
                        onMouseOver={() => setListHover(ele.id)}
                        onMouseLeave={() => setListHover(0)}
                        className="dropdown"
                      >
                        <div
                          onClick={() =>
                            setUserProfileDropdownItems(
                              !userProfileDropdownItems
                            )
                          }
                          className={`dropdown-items ${
                            theme === "light" ? "lightTheme" : "darkTheme"
                          }`}
                          style={{
                            backgroundColor: userProfileDropdownItems
                              ? theme === "light"
                                ? "#F2F2F2"
                                : "#232324"
                              : "",
                          }}
                        >
                          <p>
                            {/* icons */}
                            <span
                              className={
                                listHover === ele.id ? "iconsColor" : ""
                              }
                              style={{
                                display: "flex",
                                alignItems: "center",
                                justifyContent: "center",
                              }}
                            >
                              {ele.icons}
                            </span>
                            {/* text */}
                            <p style={{ fontSize: 16 }}>{ele.text}</p>
                          </p>
                          {/* icons */}
                          {/* onClick={() => handleClicks(ele.text)} */}
                          <span>
                            <svg
                              xmlns="http://www.w3.org/2000/svg"
                              width="16"
                              height="17"
                              viewBox="0 0 16 17"
                              fill="none"
                              // style={{ transform: "rotate(180deg" }}
                              style={{
                                transform: userProfileDropdownItems
                                  ? "rotate(360deg)"
                                  : "rotate(180deg)",
                                // transition: "transform 0.3s ease-in-out",
                                color: userProfileDropdownItems && "#FF3E5B",
                              }}
                            >
                              <path
                                fillRule="evenodd"
                                clipRule="evenodd"
                                d="M14.2736 11.9918C14.4348 11.8407 14.4429 11.5876 14.2918 11.4264L8.29184 5.0264C8.21622 4.94574 8.11059 4.89997 8.00002 4.89997C7.88946 4.89997 7.78383 4.94574 7.70821 5.0264L1.70821 11.4264C1.55712 11.5876 1.56528 11.8407 1.72645 11.9918C1.88761 12.1429 2.14075 12.1347 2.29184 11.9736L8.00002 5.88482L13.7082 11.9736C13.8593 12.1347 14.1124 12.1429 14.2736 11.9918Z"
                                fill="currentColor"
                              />
                            </svg>
                          </span>
                        </div>

                        {userProfileDropdownItems && (
                          <div className="dropdownItemsList">
                            {ele.items.map((el, index) => (
                              <p
                                onClick={() => setUserRoleChanged(el.name)}
                                key={index}
                                style={{
                                  color:
                                    userRoleChanged === el.name && "#FF3E5B",
                                }}
                              >
                                {el.name}
                              </p>
                            ))}
                          </div>
                        )}
                      </div>
                    ) : (
                      <div
                        onMouseOver={() => setListHover(ele.id)}
                        onMouseLeave={() => setListHover(0)}
                        onClick={() => handleClicks(ele.text)}
                        className={`dropdown-header ${
                          theme === "light" ? "lightTheme" : "darkTheme"
                        }`}
                      >
                        <div className="leftSideDropdownTextIcons">
                          {/* icons */}
                          <span
                            className={listHover === ele.id ? "iconsColor" : ""}
                          >
                            {ele.icons}
                          </span>
                          {/* text */}
                          <p>{ele.text}</p>
                        </div>
                      </div>
                    )}
                  </div>
                ))}
              </div>
            )}
          </div>
        </div>
      </div>

      {/* title */}
      {/* <div
        style={{
          background: theme === "light" ? "white" : "#1C1C1C",
          boxShadow:
            theme === "light"
              ? "0px 1px 1px 0px rgba(0, 0, 0, 0.15)"
              : "0px 1px 1px 0px rgba(255, 255, 255, 0.15)",
        }}
        // className="container-fluid"
      >
        <Title title={titleName} />
      </div> */}
    </div>
  );
}

export default Header;
